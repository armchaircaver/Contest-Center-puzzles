uint64_t N = 9765625 / 1024 + 1;
printf("N=%llu\n", N)
for k1 in range(1, N) :
    print("k1=", k1)
    for k2 in range(1, N//k1 +1):
        print("k2=", k2)
        for k3 in range(1, N//(k1*k2) +1):
            print("k3=", k3)
            for k4 in range(1, N//(k1*k2*k3) +1):
                for k5 in range(1, N//(k1*k2*k3*k4) +1):
                    for k6 in range(1, N//(k1*k2*k3*k4*k5) +1):
                        for k7 in range(1, N//(k1*k2*k3*k4*k5*k6) +1):
                            for k8 in range(1, N//(k1*k2*k3*k4*k5*k6*k7) +1):
                                for k9 in range(1, N//(k1*k2*k3*k4*k5*k6*k7*k8) +1):
                                    for k10 in range(1, N//(k1*k2*k3*k4*k5*k6*k7*k8*k9) +1):
                                        d = 9765625 - 1024 * k1 * k10 * k2 * k3 * k4 * k5 * k6 * k7 * k8 * k9
                                        if d > 0:
#print("d=", d)
x1 = -(-512 * k1 * *2 * k10 * k2 * k3 * k4 * k5 * k6 * k7 * k8 * k9 - 1953125 * k10 * *2 - 1280 * k10 * k2 * *2 * k3 * k4 * k5 * k6 * k7 * k8 * k9 - 3200 * k10 * k3 * *2 * k4 * k5 * k6 * k7 * k8 * k9 - 8000 * k10 * k4 * *2 * k5 * k6 * k7 * k8 * k9 - 20000 * k10 * k5 * *2 * k6 * k7 * k8 * k9 - 50000 * k10 * k6 * *2 * k7 * k8 * k9 - 125000 * k10 * k7 * *2 * k8 * k9 - 312500 * k10 * k8 * *2 * k9 - 781250 * k10 * k9 * *2) % d
x2 = -(-1953125 * k1 * *2 - 781250 * k1 * k10 * *2 - 512 * k1 * k10 * k2 * *2 * k3 * k4 * k5 * k6 * k7 * k8 * k9 - 1280 * k1 * k10 * k3 * *2 * k4 * k5 * k6 * k7 * k8 * k9 - 3200 * k1 * k10 * k4 * *2 * k5 * k6 * k7 * k8 * k9 - 8000 * k1 * k10 * k5 * *2 * k6 * k7 * k8 * k9 - 20000 * k1 * k10 * k6 * *2 * k7 * k8 * k9 - 50000 * k1 * k10 * k7 * *2 * k8 * k9 - 125000 * k1 * k10 * k8 * *2 * k9 - 312500 * k1 * k10 * k9 * *2) % d
x3 = -(-781250 * k1 * *2 * k2 - 312500 * k1 * k10 * *2 * k2 - 512 * k1 * k10 * k2 * k3 * *2 * k4 * k5 * k6 * k7 * k8 * k9 - 1280 * k1 * k10 * k2 * k4 * *2 * k5 * k6 * k7 * k8 * k9 - 3200 * k1 * k10 * k2 * k5 * *2 * k6 * k7 * k8 * k9 - 8000 * k1 * k10 * k2 * k6 * *2 * k7 * k8 * k9 - 20000 * k1 * k10 * k2 * k7 * *2 * k8 * k9 - 50000 * k1 * k10 * k2 * k8 * *2 * k9 - 125000 * k1 * k10 * k2 * k9 * *2 - 1953125 * k2 * *2) % d
x4 = -(-312500 * k1 * *2 * k2 * k3 - 125000 * k1 * k10 * *2 * k2 * k3 - 512 * k1 * k10 * k2 * k3 * k4 * *2 * k5 * k6 * k7 * k8 * k9 - 1280 * k1 * k10 * k2 * k3 * k5 * *2 * k6 * k7 * k8 * k9 - 3200 * k1 * k10 * k2 * k3 * k6 * *2 * k7 * k8 * k9 - 8000 * k1 * k10 * k2 * k3 * k7 * *2 * k8 * k9 - 20000 * k1 * k10 * k2 * k3 * k8 * *2 * k9 - 50000 * k1 * k10 * k2 * k3 * k9 * *2 - 781250 * k2 * *2 * k3 - 1953125 * k3 * *2) % d
x5 = -(-125000 * k1 * *2 * k2 * k3 * k4 - 50000 * k1 * k10 * *2 * k2 * k3 * k4 - 512 * k1 * k10 * k2 * k3 * k4 * k5 * *2 * k6 * k7 * k8 * k9 - 1280 * k1 * k10 * k2 * k3 * k4 * k6 * *2 * k7 * k8 * k9 - 3200 * k1 * k10 * k2 * k3 * k4 * k7 * *2 * k8 * k9 - 8000 * k1 * k10 * k2 * k3 * k4 * k8 * *2 * k9 - 20000 * k1 * k10 * k2 * k3 * k4 * k9 * *2 - 312500 * k2 * *2 * k3 * k4 - 781250 * k3 * *2 * k4 - 1953125 * k4 * *2) % d
x6 = -(-50000 * k1 * *2 * k2 * k3 * k4 * k5 - 20000 * k1 * k10 * *2 * k2 * k3 * k4 * k5 - 512 * k1 * k10 * k2 * k3 * k4 * k5 * k6 * *2 * k7 * k8 * k9 - 1280 * k1 * k10 * k2 * k3 * k4 * k5 * k7 * *2 * k8 * k9 - 3200 * k1 * k10 * k2 * k3 * k4 * k5 * k8 * *2 * k9 - 8000 * k1 * k10 * k2 * k3 * k4 * k5 * k9 * *2 - 125000 * k2 * *2 * k3 * k4 * k5 - 312500 * k3 * *2 * k4 * k5 - 781250 * k4 * *2 * k5 - 1953125 * k5 * *2) % d
x7 = -(-20000 * k1 * *2 * k2 * k3 * k4 * k5 * k6 - 8000 * k1 * k10 * *2 * k2 * k3 * k4 * k5 * k6 - 512 * k1 * k10 * k2 * k3 * k4 * k5 * k6 * k7 * *2 * k8 * k9 - 1280 * k1 * k10 * k2 * k3 * k4 * k5 * k6 * k8 * *2 * k9 - 3200 * k1 * k10 * k2 * k3 * k4 * k5 * k6 * k9 * *2 - 50000 * k2 * *2 * k3 * k4 * k5 * k6 - 125000 * k3 * *2 * k4 * k5 * k6 - 312500 * k4 * *2 * k5 * k6 - 781250 * k5 * *2 * k6 - 1953125 * k6 * *2) % d
x8 = -(-8000 * k1 * *2 * k2 * k3 * k4 * k5 * k6 * k7 - 3200 * k1 * k10 * *2 * k2 * k3 * k4 * k5 * k6 * k7 - 512 * k1 * k10 * k2 * k3 * k4 * k5 * k6 * k7 * k8 * *2 * k9 - 1280 * k1 * k10 * k2 * k3 * k4 * k5 * k6 * k7 * k9 * *2 - 20000 * k2 * *2 * k3 * k4 * k5 * k6 * k7 - 50000 * k3 * *2 * k4 * k5 * k6 * k7 - 125000 * k4 * *2 * k5 * k6 * k7 - 312500 * k5 * *2 * k6 * k7 - 781250 * k6 * *2 * k7 - 1953125 * k7 * *2) % d
x9 = -(-3200 * k1 * *2 * k2 * k3 * k4 * k5 * k6 * k7 * k8 - 1280 * k1 * k10 * *2 * k2 * k3 * k4 * k5 * k6 * k7 * k8 - 512 * k1 * k10 * k2 * k3 * k4 * k5 * k6 * k7 * k8 * k9 * *2 - 8000 * k2 * *2 * k3 * k4 * k5 * k6 * k7 * k8 - 20000 * k3 * *2 * k4 * k5 * k6 * k7 * k8 - 50000 * k4 * *2 * k5 * k6 * k7 * k8 - 125000 * k5 * *2 * k6 * k7 * k8 - 312500 * k6 * *2 * k7 * k8 - 781250 * k7 * *2 * k8 - 1953125 * k8 * *2) % d
x10 = -(-1280 * k1 * *2 * k2 * k3 * k4 * k5 * k6 * k7 * k8 * k9 - 512 * k1 * k10 * *2 * k2 * k3 * k4 * k5 * k6 * k7 * k8 * k9 - 3200 * k2 * *2 * k3 * k4 * k5 * k6 * k7 * k8 * k9 - 8000 * k3 * *2 * k4 * k5 * k6 * k7 * k8 * k9 - 20000 * k4 * *2 * k5 * k6 * k7 * k8 * k9 - 50000 * k5 * *2 * k6 * k7 * k8 * k9 - 125000 * k6 * *2 * k7 * k8 * k9 - 312500 * k7 * *2 * k8 * k9 - 781250 * k8 * *2 * k9 - 1953125 * k9 * *2) % d

if x1 or x2 or x3 or x4 or x5 or x6 or x7 or x8 or x9 or x10:
continue


x1 = (-512 * k1 * *2 * k10 * k2 * k3 * k4 * k5 * k6 * k7 * k8 * k9 - 1953125 * k10 * *2 - 1280 * k10 * k2 * *2 * k3 * k4 * k5 * k6 * k7 * k8 * k9 - 3200 * k10 * k3 * *2 * k4 * k5 * k6 * k7 * k8 * k9 - 8000 * k10 * k4 * *2 * k5 * k6 * k7 * k8 * k9 - 20000 * k10 * k5 * *2 * k6 * k7 * k8 * k9 - 50000 * k10 * k6 * *2 * k7 * k8 * k9 - 125000 * k10 * k7 * *2 * k8 * k9 - 312500 * k10 * k8 * *2 * k9 - 781250 * k10 * k9 * *2)//(1024*k1*k10*k2*k3*k4*k5*k6*k7*k8*k9 - 9765625)
x2 = (-1953125 * k1 * *2 - 781250 * k1 * k10 * *2 - 512 * k1 * k10 * k2 * *2 * k3 * k4 * k5 * k6 * k7 * k8 * k9 - 1280 * k1 * k10 * k3 * *2 * k4 * k5 * k6 * k7 * k8 * k9 - 3200 * k1 * k10 * k4 * *2 * k5 * k6 * k7 * k8 * k9 - 8000 * k1 * k10 * k5 * *2 * k6 * k7 * k8 * k9 - 20000 * k1 * k10 * k6 * *2 * k7 * k8 * k9 - 50000 * k1 * k10 * k7 * *2 * k8 * k9 - 125000 * k1 * k10 * k8 * *2 * k9 - 312500 * k1 * k10 * k9 * *2)//(1024*k1*k10*k2*k3*k4*k5*k6*k7*k8*k9 - 9765625)
x3 = (-781250 * k1 * *2 * k2 - 312500 * k1 * k10 * *2 * k2 - 512 * k1 * k10 * k2 * k3 * *2 * k4 * k5 * k6 * k7 * k8 * k9 - 1280 * k1 * k10 * k2 * k4 * *2 * k5 * k6 * k7 * k8 * k9 - 3200 * k1 * k10 * k2 * k5 * *2 * k6 * k7 * k8 * k9 - 8000 * k1 * k10 * k2 * k6 * *2 * k7 * k8 * k9 - 20000 * k1 * k10 * k2 * k7 * *2 * k8 * k9 - 50000 * k1 * k10 * k2 * k8 * *2 * k9 - 125000 * k1 * k10 * k2 * k9 * *2 - 1953125 * k2 * *2)//(1024*k1*k10*k2*k3*k4*k5*k6*k7*k8*k9 - 9765625)
x4 = (-312500 * k1 * *2 * k2 * k3 - 125000 * k1 * k10 * *2 * k2 * k3 - 512 * k1 * k10 * k2 * k3 * k4 * *2 * k5 * k6 * k7 * k8 * k9 - 1280 * k1 * k10 * k2 * k3 * k5 * *2 * k6 * k7 * k8 * k9 - 3200 * k1 * k10 * k2 * k3 * k6 * *2 * k7 * k8 * k9 - 8000 * k1 * k10 * k2 * k3 * k7 * *2 * k8 * k9 - 20000 * k1 * k10 * k2 * k3 * k8 * *2 * k9 - 50000 * k1 * k10 * k2 * k3 * k9 * *2 - 781250 * k2 * *2 * k3 - 1953125 * k3 * *2)//(1024*k1*k10*k2*k3*k4*k5*k6*k7*k8*k9 - 9765625)
x5 = (-125000 * k1 * *2 * k2 * k3 * k4 - 50000 * k1 * k10 * *2 * k2 * k3 * k4 - 512 * k1 * k10 * k2 * k3 * k4 * k5 * *2 * k6 * k7 * k8 * k9 - 1280 * k1 * k10 * k2 * k3 * k4 * k6 * *2 * k7 * k8 * k9 - 3200 * k1 * k10 * k2 * k3 * k4 * k7 * *2 * k8 * k9 - 8000 * k1 * k10 * k2 * k3 * k4 * k8 * *2 * k9 - 20000 * k1 * k10 * k2 * k3 * k4 * k9 * *2 - 312500 * k2 * *2 * k3 * k4 - 781250 * k3 * *2 * k4 - 1953125 * k4 * *2)//(1024*k1*k10*k2*k3*k4*k5*k6*k7*k8*k9 - 9765625)
x6 = (-50000 * k1 * *2 * k2 * k3 * k4 * k5 - 20000 * k1 * k10 * *2 * k2 * k3 * k4 * k5 - 512 * k1 * k10 * k2 * k3 * k4 * k5 * k6 * *2 * k7 * k8 * k9 - 1280 * k1 * k10 * k2 * k3 * k4 * k5 * k7 * *2 * k8 * k9 - 3200 * k1 * k10 * k2 * k3 * k4 * k5 * k8 * *2 * k9 - 8000 * k1 * k10 * k2 * k3 * k4 * k5 * k9 * *2 - 125000 * k2 * *2 * k3 * k4 * k5 - 312500 * k3 * *2 * k4 * k5 - 781250 * k4 * *2 * k5 - 1953125 * k5 * *2)//(1024*k1*k10*k2*k3*k4*k5*k6*k7*k8*k9 - 9765625)
x7 = (-20000 * k1 * *2 * k2 * k3 * k4 * k5 * k6 - 8000 * k1 * k10 * *2 * k2 * k3 * k4 * k5 * k6 - 512 * k1 * k10 * k2 * k3 * k4 * k5 * k6 * k7 * *2 * k8 * k9 - 1280 * k1 * k10 * k2 * k3 * k4 * k5 * k6 * k8 * *2 * k9 - 3200 * k1 * k10 * k2 * k3 * k4 * k5 * k6 * k9 * *2 - 50000 * k2 * *2 * k3 * k4 * k5 * k6 - 125000 * k3 * *2 * k4 * k5 * k6 - 312500 * k4 * *2 * k5 * k6 - 781250 * k5 * *2 * k6 - 1953125 * k6 * *2)//(1024*k1*k10*k2*k3*k4*k5*k6*k7*k8*k9 - 9765625)
x8 = (-8000 * k1 * *2 * k2 * k3 * k4 * k5 * k6 * k7 - 3200 * k1 * k10 * *2 * k2 * k3 * k4 * k5 * k6 * k7 - 512 * k1 * k10 * k2 * k3 * k4 * k5 * k6 * k7 * k8 * *2 * k9 - 1280 * k1 * k10 * k2 * k3 * k4 * k5 * k6 * k7 * k9 * *2 - 20000 * k2 * *2 * k3 * k4 * k5 * k6 * k7 - 50000 * k3 * *2 * k4 * k5 * k6 * k7 - 125000 * k4 * *2 * k5 * k6 * k7 - 312500 * k5 * *2 * k6 * k7 - 781250 * k6 * *2 * k7 - 1953125 * k7 * *2)//(1024*k1*k10*k2*k3*k4*k5*k6*k7*k8*k9 - 9765625)
x9 = (-3200 * k1 * *2 * k2 * k3 * k4 * k5 * k6 * k7 * k8 - 1280 * k1 * k10 * *2 * k2 * k3 * k4 * k5 * k6 * k7 * k8 - 512 * k1 * k10 * k2 * k3 * k4 * k5 * k6 * k7 * k8 * k9 * *2 - 8000 * k2 * *2 * k3 * k4 * k5 * k6 * k7 * k8 - 20000 * k3 * *2 * k4 * k5 * k6 * k7 * k8 - 50000 * k4 * *2 * k5 * k6 * k7 * k8 - 125000 * k5 * *2 * k6 * k7 * k8 - 312500 * k6 * *2 * k7 * k8 - 781250 * k7 * *2 * k8 - 1953125 * k8 * *2)//(1024*k1*k10*k2*k3*k4*k5*k6*k7*k8*k9 - 9765625)
x10 = (-1280 * k1 * *2 * k2 * k3 * k4 * k5 * k6 * k7 * k8 * k9 - 512 * k1 * k10 * *2 * k2 * k3 * k4 * k5 * k6 * k7 * k8 * k9 - 3200 * k2 * *2 * k3 * k4 * k5 * k6 * k7 * k8 * k9 - 8000 * k3 * *2 * k4 * k5 * k6 * k7 * k8 * k9 - 20000 * k4 * *2 * k5 * k6 * k7 * k8 * k9 - 50000 * k5 * *2 * k6 * k7 * k8 * k9 - 125000 * k6 * *2 * k7 * k8 * k9 - 312500 * k7 * *2 * k8 * k9 - 781250 * k8 * *2 * k9 - 1953125 * k9 * *2)//(1024*k1*k10*k2*k3*k4*k5*k6*k7*k8*k9 - 9765625)
if x1 > x2 > x3 > x4 > x5 > x6 > x7 > x8 > x9 > x10:
print("K=", (k1, k2, k3, k4, k5, k6, k7, k8, k9, k10))
K = (k1, k2, k3, k4, k5, k6, k7, k8, k9, k10)

X = (x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)
assert all(5 * X[(n + 1) % 10] == 2 * X[n] * K[n] + K[n] * *2 for n in range(10))

print("X=", (x1, x2, x3, x4, x5, x6, x7, x8, x9, x10))
